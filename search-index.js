var searchIndex = {};
searchIndex['multiaddr'] = {"items":[[0,"","multiaddr","",null,null],[3,"Multiaddr","","Representation of a Multiaddr.",null,null],[0,"protocol","","",null,null],[4,"Protocol","multiaddr::protocol","# Protocol",null,null],[13,"IP4","","[IP4](https://en.wikipedia.org/wiki/IPv4)",0,null],[13,"TCP","","[TCP](https://en.wikipedia.org/wiki/Transmission_Control_Protocol)",0,null],[13,"UDP","","[UDP](https://en.wikipedia.org/wiki/User_Datagram_Protocol)",0,null],[13,"DCCP","","[DCCP](https://en.wikipedia.org/wiki/Datagram_Congestion_Control_Protocol)",0,null],[13,"IP6","","[IP6](https://en.wikipedia.org/wiki/IPv6)",0,null],[13,"SCTP","","[SCTP](https://en.wikipedia.org/wiki/Stream_Control_Transmission_Protocol)",0,null],[13,"UTP","","[UTP](https://en.wikipedia.org/wiki/Micro_Transport_Protocol)",0,null],[13,"UDT","","[UDT](https://en.wikipedia.org/wiki/UDP-based_Data_Transfer_Protocol)",0,null],[13,"IPFS","","[IPFS](https://github.com/ipfs/specs/tree/master/protocol#341-merkledag-paths)",0,null],[13,"HTTP","","[HTTP](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol)",0,null],[13,"HTTPS","","[HTTPS](https://en.wikipedia.org/wiki/HTTPS)",0,null],[13,"ONION","","Onion",0,null],[11,"fmt","","",0,{"inputs":[{"name":"protocol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"protocol"}],"output":{"name":"protocol"}}],[11,"eq","","",0,{"inputs":[{"name":"protocol"},{"name":"protocol"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"protocol"},{"name":"protocol"}],"output":{"name":"bool"}}],[11,"to_string","","",0,{"inputs":[{"name":"protocol"}],"output":{"name":"string"}}],[11,"from_code","","Convert a `u16` based code to a `Protocol`.",0,{"inputs":[{"name":"protocol"},{"name":"u16"}],"output":{"name":"option"}}],[11,"size","","Get the size from a `Protocol`.",0,{"inputs":[{"name":"protocol"}],"output":{"name":"isize"}}],[11,"from_name","","Get the `Protocol` from a `&str` name.",0,{"inputs":[{"name":"protocol"},{"name":"str"}],"output":{"name":"option"}}],[11,"address_string_to_bytes","","Convert an array slice to the string representation.",0,{"inputs":[{"name":"protocol"},{"name":"str"}],"output":{"name":"option"}}],[11,"bytes_to_string","","Convert an array slice to the string representation.",0,null],[8,"ToMultiaddr","multiaddr","A trait for objects which can be converted to a\nMultiaddr.",null,null],[10,"to_multiaddr","","Converts this object to a Multiaddr",1,{"inputs":[{"name":"tomultiaddr"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"multiaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"multiaddr"}],"output":{"name":"multiaddr"}}],[11,"eq","","",2,{"inputs":[{"name":"multiaddr"},{"name":"multiaddr"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"multiaddr"},{"name":"multiaddr"}],"output":{"name":"bool"}}],[11,"to_string","","Convert a Multiaddr to a string",2,{"inputs":[{"name":"multiaddr"}],"output":{"name":"string"}}],[11,"new","","Create a new multiaddr based on a string representation, like\n`/ip4/127.0.0.1/udp/1234`.",2,{"inputs":[{"name":"multiaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"to_bytes","","Return a copy to disallow changing the bytes directly",2,{"inputs":[{"name":"multiaddr"}],"output":{"name":"vec"}}],[11,"protocol","","Return a list of protocols",2,{"inputs":[{"name":"multiaddr"}],"output":{"name":"vec"}}],[11,"encapsulate","","Wrap a given Multiaddr and return the combination.",2,{"inputs":[{"name":"multiaddr"},{"name":"t"}],"output":{"name":"result"}}],[11,"decapsulate","","Remove the outer most address from itself.",2,{"inputs":[{"name":"multiaddr"},{"name":"t"}],"output":{"name":"result"}}],[11,"to_multiaddr","std::net::addr","",3,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_multiaddr","","",4,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_multiaddr","","",5,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"to_multiaddr","std::net::ip","",6,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"result"}}],[11,"to_multiaddr","","",7,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"result"}}],[11,"to_multiaddr","collections::string","",8,{"inputs":[{"name":"string"}],"output":{"name":"result"}}],[11,"to_multiaddr","multiaddr","",2,{"inputs":[{"name":"multiaddr"}],"output":{"name":"result"}}]],"paths":[[4,"Protocol"],[8,"ToMultiaddr"],[3,"Multiaddr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"String"]]};
initSearch(searchIndex);
